{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../../src/crypt.ts","../../src/deferred.ts","../../src/emulator.ts","../../src/errors.ts","../../src/obj.ts","../../src/compat.ts","../../../src/logger.ts","../../../src/platformLoggerService.ts","../../../src/constants.ts","../../../src/internal.ts","../../../src/errors.ts","../../../src/registerCoreComponents.ts","../../../src/firebaseApp.ts","../../../src/api.ts","../../../src/index.ts","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../src/component.ts","../../../src/provider.ts","../../../src/component_container.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../../src/implementation/constants.ts","../../src/implementation/error.ts","../../src/implementation/connection.ts","../../src/implementation/location.ts","../../src/implementation/failrequest.ts","../../src/implementation/type.ts","../../src/implementation/url.ts","../../src/implementation/request.ts","../../src/implementation/backoff.ts","../../src/implementation/fs.ts","../../src/implementation/string.ts","../../src/platform/browser/base64.ts","../../src/implementation/blob.ts","../../src/implementation/json.ts","../../src/implementation/path.ts","../../src/implementation/metadata.ts","../../src/implementation/requestinfo.ts","../../src/implementation/requests.ts","../../src/implementation/taskenums.ts","../../src/implementation/observer.ts","../../src/implementation/async.ts","../../src/platform/browser/connection.ts","../../src/task.ts","../../src/reference.ts","../../src/service.ts","../../src/constants.ts","../../src/api.ts","../../src/index.ts","../node_modules/webpack/buildin/global.js","../../index.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","stringToByteArray","str","out","p","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","Deferred","promise","callback","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","JSON","stringify","alg","FirebaseError","code","message","customData","captureStackTrace","ErrorFactory","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","deepEqual","a","b","aKeys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","container","getProviders","map","provider","component","getComponent","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","appName","_apps","Map","_components","_addComponent","app","addComponent","e","debug","_registerComponent","componentName","has","set","_getProvider","getProvider","variant","ERRORS","ERROR_FACTORY","options","config","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","isDeleted","SDK_VERSION","initializeApp","rawConfig","DEFAULT_ENTRY_NAME","existingApp","get","newApp","getApp","registerVersion","libraryKeyOrName","PLATFORM_LOG_STRING","libraryMismatch","match","versionMismatch","warning","warn","_assertThisInitialized","ReferenceError","_setPrototypeOf","o","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","optional","isComponentEager","entries","instanceDeferred","delete","services","from","all","INTERNAL","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","existingInstance","callbacks","invokeOnInitCallbacks","ComponentContainer","providers","setComponent","_typeof","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","NewTarget","DEFAULT_HOST","prependCode","serverResponse","_baseMessage","StorageError","unknown","cannotSliceBlob","invalidArgument","appDeleted","invalidFormat","format","internalError","ErrorCode","bucket","path","path_","encode","encodeURIComponent","bucketString","host","bucketLocation","Location","makeFromUrl","url","location","bucketDomain","gsRegex","RegExp","httpModify","decodeURIComponent","firebaseStorageHost","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","invalidUrl","promise_","isString","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","pendingConnection_","backoffId_","canceled_","appDelete_","resolve_","reject_","start_","backoffDone","requestWentThrough","status","connection","wasSuccessCode","getResponse","getErrorText","canceled","f","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","handler","clearGlobalTimeout","clearTimeout","success","waitMillis","Math","random","stopped","wasTimeout","start","backoffCallback","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","isRetryStatusCode_","successCode","indexOf","wasCanceled","ABORT","appDelete","abort","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","StringFormat","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","rest","decoded","percentEncodedBytes_","dataURLBytes_","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","array","dataURL","matches","middle","s","end","substring","endsWith","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","FbsBlob","buffer","blobby","uint8Arrays","finalLength","merged","index","jsonObjectOrNull","parse","lastComponent","lastIndexOf","noXform_","metadata","server","local","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","resource","len","mapping","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","urlParams","headers","body","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","split","alt","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestInfo","metadataForUpload_","metadataClone","assign","determineContentType_","multipartUpload","bucketOnlyServerUrl","boundary","genBoundary","metadata_","preBlobPart","postBlobPart","maxUploadRetryTime","uploadData","current","finalized","checkResumeHeader_","allowed","getResponseHeader","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadStatus","newCurrent","TaskState","taskStateFromInternalTaskState","nextOrObserver","observer","argsToForward","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","response","statusText","header","listener","upload","removeEventListener","responseType","newTextConnection","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","_codeEquals","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","storage","_getAuthToken","_getAppCheckToken","authToken","appCheckToken","_resolveToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","getPromise","sizeString","getResumableUploadStatus","statusRequest","_makeProgressCallback","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","bytesTransferred","totalBytes","task","completed","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_finishPromise","triggered","fbsAsync","bind","snapshot","valid","_service","Reference","_newRef","newPath","invalidRootOperation","getDownloadURL","_throwIfRoot","requestsGetDownloadUrl","makeRequestWithTokens","_getChild","childPath","canonicalChildPath","child","refFromPath","_bucket","reference","serviceOrRef","pathOrUrl","test","extractBucket","makeFromBucketSpec","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","time","POSITIVE_INFINITY","_overrideAuthToken","auth","getToken","tokenData","accessToken","appCheck","request","clear","requestFactory","appId","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","STORAGE_TYPE","uploadBytesResumable","uploadBytesResumableInternal","getDownloadURLInternal","refInternal","getStorage","bucketUrl","storageProvider","storageInstance","factory","authProvider","appCheckProvider","setMultipleInstances","g","window","Parent","Class","_cache","Wrapper"],"mappings":"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","file":"static/js/3.9875fe15.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to StorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   */\n  constructor(code: StorageErrorCode, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (progressEvent: ProgressEvent) => void =\n        progressEvent => {\n          const loaded = progressEvent.loaded;\n          const total = progressEvent.lengthComputable\n            ? progressEvent.total\n            : -1;\n          if (this.progressCallback_ !== null) {\n            this.progressCallback_(loaded, total);\n          }\n        };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (!hitServer || this.isRetryStatusCode_(status)) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: Unsubscribe | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport { EmulatorMockTokenOptions, getModularInstance } from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}"],"sourceRoot":""}