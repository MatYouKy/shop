{"version":3,"sources":["UI/Input/Input.tsx","UI/Input/Input.module.scss","pages/AdminPanel/AdminPanel.module.scss","firebase/firebase.ts","actions/fetchProduct.ts","actions/postProduct.ts","pages/AdminPanel/AdminPanel.tsx"],"names":["Input","forwardRef","ref","input","label","hasError","textError","extraClassName","className","classes","htmlFor","id","TextArea","defaultProps","module","exports","firebaseApp","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","fetchProduct","url","product","a","fetch","method","body","JSON","stringify","ok","Error","REACT_APP_FIREBASE_PRODUCT_ENDPOINT","validLength","value","trim","length","AdminPanel","useState","isLoading","setIsLoading","image","setImage","productNameIsValid","productDescriptionIsValid","productPriceIsValid","formValidity","setFormValidity","productNameRef","useRef","productDescriptionRef","productPriceRef","productFileRef","progress","setProgress","error","setError","postFileHandler","fileName","file","storageRef","uploadFile","uploadBytesResumable","contentType","on","snapshot","bytesTransferred","totalBytes","console","log","state","code","getDownloadURL","then","downloadURL","name","description","price","img","usePostProduct","cancelHandler","current","addNewProductHandler","event","preventDefault","parseInt","useEffect","admin","container","heading","done","onSubmit","type","defaultValue","min","onChange","target","files","action","LoadingSpinner","Button","button","onClick"],"mappings":"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","file":"static/js/7.2be1aafc.chunk.js","sourcesContent":["import { forwardRef } from 'react';\nimport { InputInterface } from '../../interfaces/UIInterface'\nimport classes from './Input.module.scss';\n\ninterface InputPropsType { \n  input: InputInterface;\n  label: string;\n  hasError?: boolean;\n  textError?: string;\n  extraClassName?: string;\n};\n\ninterface TextAreaInterface {\n  id: string;\n  label: string;\n  hasError?: boolean;\n  textError?: string;\n  extraClassName?: string;\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputPropsType>(({ input, label, hasError, textError, extraClassName }, ref) => (\n  <div className={`${classes.input} ${extraClassName || extraClassName}`}>\n    <label htmlFor={input.id}>{label}</label>\n    <input ref={ref} {...input} />\n    {hasError && <p className={classes['error-text']}>{textError}</p>}\n  </div>\n));\n\nexport const TextArea = forwardRef<HTMLTextAreaElement, TextAreaInterface>(({ id, label, hasError, textError, extraClassName }, ref) => (\n  <div className={`${classes.input} ${extraClassName || extraClassName}`}>\n    <label htmlFor={id}>{label}</label>\n    <textarea ref={ref} id={id} />\n    {hasError && <p className={classes['error-text']}>{textError}</p>}\n  </div>\n));\n\nInput.defaultProps = {\n  hasError: false,\n  textError: '',\n  extraClassName: ''\n}\n\nTextArea.defaultProps = {\n  hasError: false,\n  textError: '',\n  extraClassName: ''\n};\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__ftuL7\",\"error-text\":\"Input_error-text__1FjL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"AdminPanel_admin__1LNvz\",\"container\":\"AdminPanel_container__5GyBK\",\"heading\":\"AdminPanel_heading__3MuId\",\"add-section\":\"AdminPanel_add-section__3muno\",\"done\":\"AdminPanel_done__1GU-9\",\"action\":\"AdminPanel_action__2yr_t\",\"button\":\"AdminPanel_button__2r6SL\",\"error\":\"AdminPanel_error__3qYnY\",\"new-product\":\"AdminPanel_new-product__fUebW\"};","/* eslint-disable default-case */\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst storage = getStorage(firebaseApp);\r\n\r\nexport { storage };\r\n","\r\nexport const fetchProduct = async ( url: string, product: { name: string; description: string; price: number; img: string }) => {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(product)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('dismiss posst');\r\n    }\r\n};","import { useState } from 'react';\r\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from '../firebase/firebase';\r\nimport { fetchProduct } from './fetchProduct';\r\n\r\nconst url = `${process.env.REACT_APP_FIREBASE_PRODUCT_ENDPOINT}products.json`;\r\n    \r\nexport const usePostProduct = () => {\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState('');\r\n    \r\n    const postFileHandler = ( fileName: string, file: any, product: { name: string; description: string; price: number }): void => {\r\n      const metadata = {\r\n        contentType: 'image/jpeg'\r\n      };\r\n      const storageRef = ref(storage, fileName);\r\n      const uploadFile = uploadBytesResumable(storageRef, file, metadata);\r\n\r\n      uploadFile.on(\r\n        'state_changed',\r\n        snapshot => {\r\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          // eslint-disable-next-line no-console\r\n          console.log(`Upload is ${progress}% done`);\r\n\r\n            setProgress(progress);\r\n          \r\n          // eslint-disable-next-line default-case\r\n          switch (snapshot.state) {\r\n            case 'paused':\r\n              // eslint-disable-next-line no-console\r\n              console.log('Upload is paused');\r\n              break;\r\n            case 'running':\r\n              // eslint-disable-next-line no-console\r\n              console.log('Upload is running');\r\n              break;\r\n          }\r\n        },\r\n        error => {\r\n          setError(error.code);\r\n        },\r\n        () =>\r\n          getDownloadURL(uploadFile.snapshot.ref).then(downloadURL => {\r\n            fetchProduct(url, {\r\n              name: product.name,\r\n              description: product.description,\r\n              price: product.price,\r\n              img: downloadURL\r\n            });\r\n          })\r\n      );\r\n    };\r\n    \r\n    return { error, progress, postFileHandler };\r\n};\r\n\r\n\r\n","import { FC, FormEvent, useRef, useState, ChangeEvent, useEffect } from 'react';\r\nimport { NewProductValidate } from '../../models/product.model';\r\nimport Button from '../../UI/Button/Button';\r\nimport { Input, TextArea } from '../../UI/Input/Input';\r\nimport { usePostProduct } from '../../actions/postProduct';\r\nimport classes from './AdminPanel.module.scss';\r\nimport { LoadingSpinner } from '../../UI/LoadingSpinner/LoadingSpinner';\r\n\r\nconst validLength = (value: string): boolean => value.trim().length >= 3;\r\nconst noEqual = (value: number): boolean => value !== 0;\r\n\r\nconst AdminPanel: FC = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [image, setImage] = useState<any>(null);\r\n  const [formValidity, setFormValidity] = useState<NewProductValidate>({\r\n    productNameIsValid: true,\r\n    productDescriptionIsValid: true,\r\n    productPriceIsValid: true\r\n  });\r\n\r\n  const productNameRef = useRef<HTMLInputElement>(null);\r\n  const productDescriptionRef = useRef<HTMLTextAreaElement>(null);\r\n  const productPriceRef = useRef<HTMLInputElement>(null);\r\n  const productFileRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { error, progress, postFileHandler } = usePostProduct();\r\n\r\n  const cancelHandler = () => {\r\n    productNameRef.current!.value = '';\r\n    productDescriptionRef.current!.value = '';\r\n    productPriceRef.current!.value = '0';\r\n    productFileRef.current!.value = '';\r\n    setImage(null);\r\n  };\r\n\r\n  const addNewProductHandler = async (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const name = productNameRef.current!.value;\r\n    const description = productDescriptionRef.current!.value;\r\n    const price = parseInt(productPriceRef.current!.value, 10);\r\n\r\n    const productNameIsValid = validLength(name);\r\n    const productDescriptionIsValid = validLength(description);\r\n    const productPriceIsValid = noEqual(price);\r\n    const img = image?.name ? image.name : 'undefined';\r\n\r\n    setFormValidity({\r\n      productNameIsValid,\r\n      productDescriptionIsValid,\r\n      productPriceIsValid\r\n    });\r\n\r\n    const formIsValid = productNameIsValid && productDescriptionIsValid && productPriceIsValid;\r\n\r\n    if (!formIsValid) return;\r\n\r\n    setIsLoading(true);\r\n\r\n    const product = {\r\n      name,\r\n      description,\r\n      price,\r\n      img\r\n    };\r\n\r\n    postFileHandler(`products/${img}`, image, product);\r\n\r\n    cancelHandler();\r\n  };\r\n\r\n  const fileHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files) setImage(event.target.files[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (progress === 100) setIsLoading(false);\r\n  }, [progress]);\r\n\r\n  return (\r\n    <article className={classes.admin}>\r\n      <section className={classes.container}>\r\n        <div className={classes.heading}>\r\n          <h1>admin panel</h1>\r\n        </div>\r\n        <div className={classes['add-section']}>\r\n          <h3>Add Product</h3>\r\n          <p className={classes.error}>{error}</p>\r\n          {progress === 100 && error === '' && <p className={classes.done}>Done !</p>}\r\n          <form onSubmit={addNewProductHandler}>\r\n            <Input\r\n              ref={productNameRef}\r\n              label='Product Name'\r\n              hasError={!formValidity.productNameIsValid}\r\n              textError='Name do not be empty!'\r\n              input={{\r\n                id: 'newProductName',\r\n                type: 'text'\r\n              }}\r\n            />\r\n            <TextArea\r\n              ref={productDescriptionRef}\r\n              label='description'\r\n              hasError={!formValidity.productDescriptionIsValid}\r\n              textError='Description do not be empty!'\r\n              id='newProductDescription'\r\n            />\r\n\r\n            <Input\r\n              ref={productPriceRef}\r\n              label='price'\r\n              hasError={!formValidity.productPriceIsValid}\r\n              textError='Price cannot be equal 0!'\r\n              input={{\r\n                id: 'newProductPrice',\r\n                type: 'number',\r\n                defaultValue: 0,\r\n                min: '0'\r\n              }}\r\n            />\r\n            <input type='file' onChange={fileHandler} ref={productFileRef} />\r\n            <div className={classes.action}>\r\n              {isLoading && <LoadingSpinner />}\r\n              {!isLoading && (\r\n                <>\r\n                  <Button extraClassName={classes.button} type='button' name='cancel' onClick={cancelHandler} />\r\n                  <Button extraClassName={classes.button} type='submit' name='Add' />\r\n                </>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"sourceRoot":""}